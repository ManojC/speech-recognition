{"version":3,"sources":["webpack:////home/localstars/Documents/github/speech-recognition/src async","webpack:////home/localstars/Documents/github/speech-recognition/src/app/app.component.css","webpack:////home/localstars/Documents/github/speech-recognition/src/app/app.component.html","webpack:////home/localstars/Documents/github/speech-recognition/src/app/app.component.ts","webpack:////home/localstars/Documents/github/speech-recognition/src/app/app.module.ts","webpack:////home/localstars/Documents/github/speech-recognition/src/app/base.component.ts","webpack:////home/localstars/Documents/github/speech-recognition/src/app/home/home.component.css","webpack:////home/localstars/Documents/github/speech-recognition/src/app/home/home.component.html","webpack:////home/localstars/Documents/github/speech-recognition/src/app/home/home.component.ts","webpack:////home/localstars/Documents/github/speech-recognition/src/app/keyboard/keyboard.component.css","webpack:////home/localstars/Documents/github/speech-recognition/src/app/keyboard/keyboard.component.html","webpack:////home/localstars/Documents/github/speech-recognition/src/app/keyboard/keyboard.component.ts","webpack:////home/localstars/Documents/github/speech-recognition/src/app/models/speech.model.ts","webpack:////home/localstars/Documents/github/speech-recognition/src/app/speech-recognition.ts","webpack:////home/localstars/Documents/github/speech-recognition/src/app/speech/speech.component.css","webpack:////home/localstars/Documents/github/speech-recognition/src/app/speech/speech.component.html","webpack:////home/localstars/Documents/github/speech-recognition/src/app/speech/speech.component.ts","webpack:////home/localstars/Documents/github/speech-recognition/src/environments/environment.ts","webpack:////home/localstars/Documents/github/speech-recognition/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/localstars/Documents/github/speech-recognition/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/localstars/Documents/github/speech-recognition/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/localstars/Documents/github/speech-recognition/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AngularFireAuth } from \"angularfire2/auth\";\nimport * as firebase from 'firebase'\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n    private user: any;\n    \n    constructor(private _AngularFireAuth: AngularFireAuth,\n        private _Router: Router) {}\n\n    public ngOnInit(): void {\n        this._AngularFireAuth.authState.subscribe((user: firebase.User) => {\n            if (user && user.uid) {\n                this.user = {\n                    displayName: user.displayName,\n                    email: user.email,\n                    phoneNumber: user.phoneNumber,\n                    photoURL: user.photoURL,\n                    providerId: user.providerId,\n                    uid: user.uid\n                };\n                sessionStorage.setItem('user', JSON.stringify(this.user));\n            }\n        });\n    }\n\n    private translatePanctuations(message: string): string {\n        message = message.replace(/full stop/ig, '.');\n        message = message.replace(/comma/ig, ',');\n        message = message.replace(/exclamation/ig, '!');\n        message = message.replace(/question mark/ig, '?');\n\n        message = message.replace(' .', '. ');\n        message = message.replace(' ,', ', ');\n        message = message.replace(' !', '! ');\n        message = message.replace(' ?', '? ');\n\n        message = message.replace('.  ', '. ');\n        message = message.replace(',  ', ', ');\n        message = message.replace('!  ', '! ');\n        message = message.replace('?  ', '? ');\n\n        return message.trim();\n    }\n\n    private logout(): void {\n        this._AngularFireAuth.auth.signOut().then((response: any) => {\n            this.user = null;\n            sessionStorage.removeItem('user');\n        });\n    }\n\n    private login(): void {\n        this._AngularFireAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    }\n\n    private home(): void {\n        this._Router.navigate(['']);\n    }\n\n    private typingTest(): void {\n        this._Router.navigate(['typing']);\n    }\n\n    private speechTest(): void {\n        this._Router.navigate(['speech']);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/app/app.component.ts","import { CommonModule } from \"@angular/common\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from \"@angular/router\";\nimport { AngularFireModule } from \"angularfire2\";\nimport { AngularFireDatabaseModule } from \"angularfire2/database\";\nimport { AngularFireAuthModule } from \"angularfire2/auth\";\nimport { environment } from \"../environments/environment\";\n\nimport { AppComponent } from './app.component';\nimport { SpeechComponent } from './speech/speech.component';\nimport { KeyboardComponent } from './keyboard/keyboard.component';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SpeechComponent,\n        KeyboardComponent,\n        HomeComponent\n    ],\n    imports: [\n        BrowserModule,\n        CommonModule,\n        AngularFireModule.initializeApp(environment.firebase),\n        AngularFireDatabaseModule,\n        AngularFireAuthModule,\n        RouterModule.forRoot([\n            {\n                path: 'speech',\n                component: SpeechComponent\n            },\n            {\n                path: 'typing',\n                component: KeyboardComponent\n            },\n            {\n                path: '**',\n                component: HomeComponent\n            }\n        ])\n    ],\n    providers: [],\n    bootstrap: [\n        AppComponent\n    ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/app/app.module.ts","export class BaseComponent {\n    public sampleText = `The Universe is everything we can touch, feel, sense, measure or detect. It includes living things, planets, stars, galaxies, dust clouds, light, and even time. Before the birth of the Universe, time, space and matter did not exist. The Universe contains billions of galaxies, each containing millions or billions of stars. The space between the stars and galaxies is largely empty. However, even places far from stars and planets contain scattered particles of dust or a few hydrogen atoms per cubic centimeter. Space is also filled with radiation, magnetic fields and high energy particles. The Universe is incredibly huge. It would take a modern jet fighter more than a million years to reach the nearest star to the Sun. No one knows the exact size of the Universe, because we cannot  see the edge if there is one. All we do know is that the visible Universe is at least 93 billion  light years across.`;\n}\n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/app/base.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"div.navbar-header h2 {\\n    margin:  0;\\n    margin: 15px 0;\\n    color: white;\\n    font-weight: bold;\\n    cursor: pointer;\\n}\\n\\n.navbar {\\n    background-color: #337ab7;\\n}\\n\\nbutton {\\n    margin-top: 10px;\\n    font-weight: bold;\\n    font-size: 20px;\\n}\\n\\nspan.user-name {\\n    color: yellow;\\n    font-weight: bold;\\n    text-transform: capitalize;\\n    margin-top: 8px;\\n    font-size: 25px;\\n}\\n\\nul {\\n    font-size: 18px;\\n}\\n\\nli {\\n    margin-top: 5px;\\n}\\n\\nbutton.btn-sm {\\n    margin-top: 0;\\n    font-size: 12px;\\n    font-weight: bold;\\n}\\n\\n.question, .answer {\\n    margin-top: 10px;\\n    height: 50px;\\n    padding: 10px;\\n    color: white;\\n    background-color: black;\\n    font-size: 18px;\\n}\\n\\n.success-test, .error-test {\\n    color: green;\\n    font-weight: bold;\\n    font-size: 20px;\\n}\\n\\n.error-test {\\n    color: red;\\n}\\n\\n.test {\\n    font-weight: bold;\\n    font-size: 20px;\\n    margin-top: 20px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/localstars/Documents/github/speech-recognition/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <nav class=\\\"navbar navbar-default col-lg-12\\\">\\n            <div class=\\\"navbar-header col-lg-2\\\">\\n                <h2 (click)=\\\"home()\\\">Home Page</h2>\\n            </div>\\n            <div class=\\\"col-lg-2\\\">\\n                <button *ngIf=\\\"user?.practiceTestPassed\\\" class=\\\"btn btn-success col-lg-6\\\" (click)=\\\"typingTest()\\\">\\n                    Typing Test\\n                </button>\\n            </div>\\n            <div class=\\\"col-lg-2\\\">\\n                <button *ngIf=\\\"user?.practiceTestPassed\\\" class=\\\"btn btn-success col-lg-6\\\" (click)=\\\"speechTest()\\\">\\n                    Speech Test\\n                </button>\\n            </div>\\n            <div class=\\\"col-lg-5\\\">\\n                <span *ngIf=\\\"user\\\" class=\\\"navbar-brand user-name pull-right text-right\\\">Hello {{user?.displayName}}!</span>\\n            </div>\\n            <div class=\\\"col-lg-1\\\">\\n                <button *ngIf=\\\"user\\\" (click)=\\\"logout();\\\" class=\\\"btn btn-danger pull-right col-lg-12\\\">Logout</button>\\n            </div>\\n            <div [class]=\\\"user ? 'col-lg-1' : 'col-lg-10'\\\">\\n                <button *ngIf=\\\"!user\\\" (click)=\\\"login();\\\" class=\\\"btn btn-success pull-right\\\">Login</button>\\n            </div>\\n        </nav>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <h3><u><b>Instructions</b></u> :</h3>\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                    <ul>\\n                        <li>This application works <b>only on chrome browser.</b></li>\\n                        <li>This application will ask for <b>permission to access microphone.</b></li>\\n                        <li>The test involves 2 sub tests - <b>Typing</b> & <b>Speech Recognition.</b></li>\\n                        <li>\\n                            To start the test, click\\n                            <button class=\\\"btn btn-success btn-sm\\\">Login</button>\\n                            button & log in using your <b>google account.</b></li>\\n                        <li>After login, a small practice task will appear on the right side of the window.</li>\\n                        <li>\\n                            Once the practice task is completed,\\n                            <button class=\\\"btn btn-success btn-sm\\\">Typing Test</button> & \\n                            <button class=\\\"btn btn-success btn-sm\\\">Speech Test</button> \\n                            buttons will appear.\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <h3><u><b>Typing Task</b></u> :</h3>\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                    <ul>\\n                        <li>\\n                            click\\n                            <button class=\\\"btn btn-success btn-sm\\\">Typing Test</button>\\n                            button (provided on the top of home window) to navigate to this task.\\n                        </li>\\n                        <li>\\n                            Click\\n                            <button class=\\\"btn btn-success btn-sm\\\">Start Task</button>\\n                            button (provided on the top of typing task window) to start the task.\\n                        </li>\\n                        <li>\\n                            A timer will start as soon as \\n                            <button class=\\\"btn btn-success btn-sm\\\">Start Task</button>\\n                            button is pressed.\\n                        </li>\\n                        <li>\\n                            Start typing the text (provided in left box), in the text box on the right side\\n                        </li>\\n                        <li>\\n                            Press\\n                            <button class=\\\"btn btn-danger btn-sm\\\"> End Task </button>\\n                            button to finish the test & check the results.\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <h3><u><b>Speech Task</b></u> :</h3>\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                    <ul>\\n                        <li>\\n                            click\\n                            <button class=\\\"btn btn-success btn-sm\\\">Speech Test</button>\\n                            button (provided on the top of home window) to navigate to this task.\\n                        </li>\\n                        <li>\\n                            Click\\n                            <button class=\\\"btn btn-success btn-sm\\\">Start Task</button>\\n                            button (provided on the top of speech task window) to start the task.\\n                        </li>\\n                        <li>\\n                            A timer will start &\\n                            <img src=\\\"./assets/speech-icon.png\\\" alt=\\\"speech icon\\\">\\n                            icon will appear on browser tab once\\n                            <button class=\\\"btn btn-success btn-sm\\\">Start Task</button>\\n                            button is pressed.\\n                        </li>\\n                        <li>\\n                            Start reading the text (provided in left box) loudly.\\n                        </li>\\n                        <li>\\n                            The  spoken words will appear in the right box.\\n                        </li>\\n                        <li>\\n                            Press\\n                            <button class=\\\"btn btn-danger btn-sm\\\"> End Task </button>\\n                            button to finish the test & check the results.\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"user\\\" class=\\\"col-lg-6\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12 text-center\\\">\\n                    <h2><b>Practice Test</b></h2>\\n                </div>\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12 test\\\">\\n                            <ul>\\n                                <li>\\n                                    Press this button to start the test (press again to restart).\\n                                    <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"startSpeech()\\\">Start Test</button>\\n                                </li>\\n                                <li>\\n                                    Read the text loudly.\\n                                </li>\\n                                <li>\\n                                    Read panctuations (e.g. read  '.' as fullstop & ',' as comma).\\n                                </li>\\n                                <li>\\n                                    Press this button to end the test.\\n                                    <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"endSpeech(1)\\\">End Test</button>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div class=\\\"question\\\" id=\\\"question\\\">\\n                                    Elephant, lion, horse, dog, cat are animals.\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div id=\\\"answer\\\" class=\\\"answer\\\">\\n                                {{user?.practiceTestPassed ? 'Elephant, lion, horse, dog, cat are animals.' : ''}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                            <div id=\\\"answer\\\" class=\\\"success-test\\\" *ngIf=\\\"user?.practiceTestPassed\\\">\\n                                Test passed successfully! Go for the main tests.\\n                            </div>\\n                            <div id=\\\"answer\\\" class=\\\"error-test\\\" *ngIf=\\\"!user?.practiceTestPassed\\\">\\n                                Text is not matching!!\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/localstars/Documents/github/speech-recognition/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AngularFireAuth } from \"angularfire2/auth\";\nimport * as firebase from 'firebase'\nimport { SpeechRecognition } from \"../speech-recognition\";\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n    private user: any;\n    private _SpeechRecognition: SpeechRecognition;\n    private translatedtext: string = \"\";\n\n    constructor(private _AngularFireAuth: AngularFireAuth,\n        private _Router: Router) { }\n\n    public ngOnInit(): void {\n        this._AngularFireAuth.authState.subscribe((user: firebase.User) => {\n            if (user && user.uid) {\n                this.user = {\n                    displayName: user.displayName,\n                    email: user.email,\n                    phoneNumber: user.phoneNumber,\n                    photoURL: user.photoURL,\n                    providerId: user.providerId,\n                    uid: user.uid,\n                    practiceTestPassed: false\n                };\n                sessionStorage.setItem('user', JSON.stringify(this.user));\n                this.user.practiceTestPassed = !!sessionStorage.getItem('practiceTestPassed');\n            }\n        });\n    }\n\n    private startSpeech(answerNumber: number) {\n        if (!this.user.practiceTestPassed) {\n            this.initialise();\n        }\n    }\n\n    private endSpeech() {\n        this.checkResult();\n        this._SpeechRecognition.onresult = null;\n    }\n\n    private initialise(): void {\n        document.getElementById(\"answer\").innerHTML= \"\";\n        this.translatedtext = \"\";\n        if (this._SpeechRecognition) {\n            this._SpeechRecognition.onresult = this.onResult.bind(this);\n            return;\n        }\n        this._SpeechRecognition = this._SpeechRecognition || new SpeechRecognition('en-GB', true, true, 1);\n        this._SpeechRecognition.onresult = this.onResult.bind(this);\n        this._SpeechRecognition.start();\n    }\n\n    private onResult(event: any): void {\n        var intermidiateResults = '';\n        for (var i = event.resultIndex; i < event.results.length; i++) {\n            var transcript = event.results[i][0].transcript;\n            transcript.replace(\"\\n\", \"<br>\");\n            if (event.results[i].isFinal) {\n                this.translatedtext += transcript;\n            } else {\n                intermidiateResults += transcript;\n            }\n        }\n        this.translatedtext = this.translatePanctuations(this.translatedtext);\n        intermidiateResults = this.translatePanctuations(intermidiateResults);\n\n        document.getElementById(\"answer\").innerHTML = this.translatedtext + '<span style=\"color:#777\">' + intermidiateResults + '</span>';\n    }\n\n    private checkResult() {\n        if (document.getElementById(\"answer\").innerText === document.getElementById(\"question\").innerText) {\n            this.user.practiceTestPassed = true;\n            sessionStorage.setItem('practiceTestPassed', this.user.practiceTestPassed);\n        }\n    }\n\n    private translatePanctuations(message: string): string {\n        message = message.replace(/full stop/ig, '.');\n        message = message.replace(/comma/ig, ',');\n        message = message.replace(/exclamation/ig, '!');\n        message = message.replace(/question mark/ig, '?');\n\n        message = message.replace(' .', '. ');\n        message = message.replace(' ,', ', ');\n        message = message.replace(' !', '! ');\n        message = message.replace(' ?', '? ');\n\n        message = message.replace('.  ', '. ');\n        message = message.replace(',  ', ', ');\n        message = message.replace('!  ', '! ');\n        message = message.replace('?  ', '? ');\n\n        message = message.charAt(0).toUpperCase() + message.slice(1);\n\n        return message.trim();\n    }\n\n    private login(): void {\n        this._AngularFireAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    }\n\n    private logout(): void {\n        this._AngularFireAuth.auth.signOut().then((response: any) => {\n            this.user = null;\n            sessionStorage.removeItem('user');\n            sessionStorage.removeItem('practiceTestPassed');\n        });\n    }\n\n    private home(): void {\n        this._Router.navigate(['']);\n    }\n\n    private typingTest(): void {\n        this._Router.navigate(['typing']);\n    }\n\n    private speechTest(): void {\n        this._Router.navigate(['speech']);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h2 {\\n    margin:  0;\\n    margin: 15px 0;\\n    color: white;\\n    font-weight: bold;\\n    cursor: pointer;\\n}\\n\\n.navbar {\\n    background-color: #337ab7;\\n}\\n\\nbutton {\\n    margin-top: 12px;\\n    font-weight: bold;\\n    font-size: 20px;\\n}\\n\\nspan.user-name {\\n    color: yellow;\\n    font-weight: bold;\\n    text-transform: capitalize;\\n    margin-top: 8px;\\n    font-size: 25px;\\n}\\n\\nh3 {\\n    text-align: center;\\n    margin: 0 0 10px 0;\\n    font-weight: bold;\\n}\\n\\ntextarea#text, #result, #analysis {\\n    border: solid thin black;\\n    text-align: justify;\\n    height: 400px;\\n    max-height: 400px;\\n    word-wrap: break-word;\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    padding: 10px;\\n    line-height: 25px;\\n    font-size: 20px;\\n    margin-bottom: 30px;\\n}\\n\\n#result, #analysis {\\n    height: 300px;\\n    max-height: 300px;    \\n}\\n\\nli {\\n    margin-top: 10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/localstars/Documents/github/speech-recognition/src/app/keyboard/keyboard.component.css\n// module id = ../../../../../src/app/keyboard/keyboard.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <nav class=\\\"navbar navbar-default col-lg-12\\\">\\n            <div class=\\\"navbar-header col-lg-2\\\">\\n                <h2 (click)=\\\"home()\\\">Home Page</h2>\\n            </div>\\n            <div class=\\\"col-lg-1\\\">\\n                <button *ngIf=\\\"user\\\" id=\\\"btn-test\\\" [class]=\\\"isStopped ? 'btn btn-success col-lg-12' : 'btn btn-danger col-lg-12'\\\" (click)=\\\"timer(isStopped);\\\">\\n                    {{isStopped ? 'Start Test' : 'End Test'}}\\n                </button>\\n            </div>\\n            <div class=\\\"col-lg-2\\\">\\n                <span *ngIf=\\\"user\\\" class=\\\"navbar-brand user-name\\\">Time - {{time || '00 : 00'}}</span>\\n            </div>\\n            <div class=\\\"col-lg-6\\\">\\n                <span *ngIf=\\\"user\\\" class=\\\"navbar-brand user-name pull-right text-right\\\">Hello {{user?.displayName}}!</span>\\n            </div>\\n            <div class=\\\"col-lg-1\\\">\\n                <button *ngIf=\\\"user\\\" (click)=\\\"logout();\\\" class=\\\"btn btn-danger pull-right col-lg-12\\\">Logout</button>\\n            </div>\\n            <div [class]=\\\"user ? 'col-lg-1' : 'col-lg-10'\\\">\\n                <button *ngIf=\\\"!user\\\" (click)=\\\"login();\\\" class=\\\"btn btn-success pull-right\\\">Login</button>\\n            </div>\\n        </nav>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n            <h3>Sample</h3>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n            <h3>User Input</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n            <img id=\\\"image-sample\\\" src=\\\"./assets/sample.png\\\" alt=\\\"sample-text\\\">\\n        </div>\\n        <div id=\\\"text-generated\\\" class=\\\"col-lg-6\\\">\\n            <textarea spellcheck=\\\"false\\\" [disabled]=\\\"isStopped\\\" class=\\\"col-lg-12\\\" id=\\\"text\\\"></textarea>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-8\\\">\\n            <h3>Difference</h3>\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <h3>Analysis</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-8\\\">\\n            <div id=\\\"result\\\"></div>\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <div id=\\\"analysis\\\">\\n                <br>\\n                <ul *ngIf=\\\"speech\\\" class=\\\"col-lg-offset-1 col-lg-9\\\">\\n                    <li>\\n                        <span> Actual Word Count - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.actualWordCount}} </span>\\n                    </li>\\n                    <li>\\n                        <span> Recognised Word Count - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.recognisedWordCount}} </span>\\n                    </li>\\n                    <li>\\n                        <span> Correct Word Count - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.correctWordCount}} </span>\\n                    </li>\\n                    <li>\\n                        <span> accuracy - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.accuracy}}% </span>\\n                    </li>\\n                    <li>\\n                        <span> Completion Time - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.completionTime}} seconds </span>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/localstars/Documents/github/speech-recognition/src/app/keyboard/keyboard.component.html\n// module id = ../../../../../src/app/keyboard/keyboard.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AngularFireAuth } from \"angularfire2/auth\";\nimport * as firebase from 'firebase'\nimport * as Diff from \"text-diff\";\n\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { Speech } from \"../models/speech.model\";\nimport { BaseComponent } from \"../base.component\";\n\n@Component({\n    selector: 'app-keyboard',\n    templateUrl: './keyboard.component.html',\n    styleUrls: ['./keyboard.component.css']\n})\nexport class KeyboardComponent extends BaseComponent implements OnInit {\n\n    private dbList: any;\n    private user: any;\n    private diff: Diff;\n    private isStopped: boolean = true;\n    private startTime: Date;\n    private speech: Speech;\n\n    private time: string;\n    private resetTimer: any;\n\n    private translatedtext: string = \"\";\n\n    constructor(private _AngularFireAuth: AngularFireAuth,\n        private _db: AngularFireDatabase,\n        private _Router: Router) {\n        super();\n        this.diff = new Diff();\n    }\n\n    public ngOnInit(): void {\n        this._AngularFireAuth.authState.subscribe((user: firebase.User) => {\n            if (user && user.uid) {\n                this.user = {\n                    displayName: user.displayName,\n                    email: user.email,\n                    phoneNumber: user.phoneNumber,\n                    photoURL: user.photoURL,\n                    providerId: user.providerId,\n                    uid: user.uid\n                };\n                sessionStorage.setItem('user', JSON.stringify(this.user));\n                this.dbList = this._db.list(`/${this.user.uid}/typing`);\n            }\n        });\n    }\n\n    private translatePanctuations(message: string): string {\n        message = message.replace(/full stop/ig, '.');\n        message = message.replace(/comma/ig, ',');\n        message = message.replace(/exclamation/ig, '!');\n        message = message.replace(/question mark/ig, '?');\n\n        message = message.replace(' .', '. ');\n        message = message.replace(' ,', ', ');\n        message = message.replace(' !', '! ');\n        message = message.replace(' ?', '? ');\n\n        message = message.replace('.  ', '. ');\n        message = message.replace(',  ', ', ');\n        message = message.replace('!  ', '! ');\n        message = message.replace('?  ', '? ');\n\n        message = message.replace('universe', 'Universe');\n\n        message = this.titleCase(message);\n\n        return message.trim();\n    }\n\n    private titleCase(message: string) {\n        return message.split('. ').map(function (sentence: string) {\n            return sentence.charAt(0).toUpperCase() + sentence.slice(1);\n        }).join('. ');\n    }\n\n    private logout(): void {\n        this._AngularFireAuth.auth.signOut().then((response: any) => {\n            this.isStopped = true;\n            this.time = null;\n            this.speech = null;\n            document.getElementById('result').innerHTML = \"\";\n            if (this.resetTimer) {\n                clearTimeout(this.resetTimer);\n            }\n            this.user = null;\n            sessionStorage.removeItem('user');\n        });\n    }\n\n    private login(): void {\n        this._AngularFireAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    }\n\n    private timer(): void {\n        this.isStopped = !this.isStopped;\n        if (this.isStopped) {\n            this.processData();\n            this.updateData();\n            return;\n        }\n        this.speech = null;\n        let time: number = 0;\n        this.startTime = new Date();\n        this.resetTimer = setInterval(() => {\n            ++time;\n            let minutes: number = Math.floor(time / 60);\n            let seconds: number = time % 60;\n            this.time = `${minutes < 10 ? `0${minutes}` : minutes} : ${seconds < 10 ? `0${seconds}` : seconds}`;\n        }, 1000);\n    }\n\n    private updateData(): void {\n        this.dbList.push(this.speech).then((response: any) => {\n            console.log(response);\n        }).catch((error: any) => console.log(error));\n    }\n\n    private processData() {\n        clearInterval(this.resetTimer);\n        let textDiff: string = this.diff.main(this.sampleText, document.getElementById('text')['value']);\n        document.getElementById('result').innerHTML = this.diff.prettyHtml(textDiff);\n\n        let sampleTextArray: Array<string> = this.sampleText.split(' ');\n        let recognisedTextArray: Array<string> = document.getElementById('text')['value'].split(' ');\n\n        this.speech = new Speech();\n        this.speech.userName = this.user.displayName;\n        this.speech.data = document.getElementById('text')['value'];\n        this.speech.diff = document.getElementById('result').innerHTML;\n        this.speech.actualWordCount = sampleTextArray.length;\n        this.speech.recognisedWordCount = recognisedTextArray.length;\n        this.speech.correctWordCount = 0;\n\n        for (let i = 0; i < recognisedTextArray.length; i++) {\n            if (sampleTextArray.indexOf(recognisedTextArray[i]) > -1) {\n                this.speech.correctWordCount += 1;\n                sampleTextArray.splice(sampleTextArray.indexOf(recognisedTextArray[i]), 1);\n            }\n        }\n\n        this.speech.accuracy = (this.speech.correctWordCount / this.speech.actualWordCount) * 100;\n        this.speech.accuracy = parseFloat(this.speech.accuracy.toFixed(2));\n        this.speech.completionTime = (new Date().valueOf() - this.startTime.valueOf()) / 1000;\n        this.speech.completionTime = parseFloat(this.speech.completionTime.toFixed(2));\n    }\n\n    private home(): void {\n        this._Router.navigate(['']);\n    }\n}\n    \n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/app/keyboard/keyboard.component.ts","export class Speech {\n    public $key: string;\n    public userName : string;\n    public data: string;\n    public diff: string;\n    public actualWordCount: number;\n    public recognisedWordCount: number;\n    public correctWordCount: number;\n    public accuracy: number;\n    public completionTime: number;\n}\n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/app/models/speech.model.ts","export class SpeechRecognition {\n\n    public constructor(lang?: string, continuous?: boolean, interimResults?: boolean, maxAlternatives?: number) {\n        if (\"webkitSpeechRecognition\" in window) {\n            this.initialise();\n            this._SpeechRecognition.lang = 'en-IN';\n            this._SpeechRecognition.continuous = !!continuous;\n            this._SpeechRecognition.interimResults = !!interimResults;\n            this._SpeechRecognition.maxAlternatives = maxAlternatives || 1;\n            return;\n        }\n        throw new Error(\"speech recognition is not supported on this browser!\");\n    }\n\n    private _SpeechRecognition: any;\n\n    public onaudiostart: Function;\n    public onaudioendonend: Function;\n    public onend: Function;\n    public onerror: Function;\n    public onnomatch: Function;\n    public onresult: Function;\n    public onsoundstart: Function;\n    public onsoundend: Function;\n    public onspeechstart: Function;\n    public onspeechend: Function;\n    public onstart: Function;\n\n    public abort(): void {\n        this._SpeechRecognition && this._SpeechRecognition.abort();\n    }\n\n    public start(): void {\n        this._SpeechRecognition && this._SpeechRecognition.start();\n    }\n\n    public stop(): void {\n        this._SpeechRecognition && this._SpeechRecognition.stop();\n    }\n\n    public initialise(): void {\n        this._SpeechRecognition = new window['webkitSpeechRecognition']();\n\n        this._SpeechRecognition.onaudiostart  = (event: any) => {\n            console.log(event.type);\n            typeof this.onaudiostart === 'function' && this.onaudiostart(event);\n        };\n        this._SpeechRecognition.onaudioendonend  = (event: any) => {\n            console.log(event.type);\n            typeof this.onaudioendonend === 'function' && this.onaudioendonend(event);\n        };\n        \n        this._SpeechRecognition.onresult = (event: any) => {\n            console.log(event.type);\n            typeof this.onresult === 'function' && this.onresult(event);\n        };\n        this._SpeechRecognition.onnomatch  = (event: any) => {\n            console.log(event.type);\n            typeof this.onnomatch === 'function' && this.onnomatch(event);\n        };\n        \n        this._SpeechRecognition.onsoundstart  = (event: any) => {\n            console.log(event.type);\n            typeof this.onsoundstart === 'function' && this.onsoundstart(event);\n        };\n        this._SpeechRecognition.onsoundend  = (event: any) => {\n            console.log(event.type);\n            typeof this.onsoundend === 'function' && this.onsoundend(event);\n        };\n        \n        this._SpeechRecognition.onspeechstart  = (event: any) => {\n            console.log(event.type);\n            typeof this.onspeechstart === 'function' && this.onspeechstart(event);\n        };\n        this._SpeechRecognition.onspeechend  = (event: any) => {\n            console.log(event.type);\n            typeof this.onspeechend === 'function' && this.onspeechend(event);\n        };\n        \n        this._SpeechRecognition.onstart  = (event: any) => {\n            console.log(event.type);\n            typeof this.onstart === 'function' && this.onstart(event);\n        };\n        this._SpeechRecognition.onend  = (event: any) => {\n            console.log(event.type);\n            typeof this.onend === 'function' && this.onend(event);\n            this.abort();\n            this.start();\n        };\n\n        this._SpeechRecognition.onerror  = (event: any) => {\n            console.log(event);\n            typeof this.onerror === 'function' && this.onerror(event);\n        };\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/app/speech-recognition.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h2 {\\n    margin:  0;\\n    margin: 15px 0;\\n    color: white;\\n    font-weight: bold;\\n    cursor: pointer;\\n}\\n\\n.navbar {\\n    background-color: #337ab7;\\n}\\n\\nbutton {\\n    margin-top: 12px;\\n    font-weight: bold;\\n    font-size: 20px;\\n}\\n\\nspan.user-name {\\n    color: yellow;\\n    font-weight: bold;\\n    text-transform: capitalize;\\n    margin-top: 8px;\\n    font-size: 25px;\\n}\\n\\nh3 {\\n    text-align: center;\\n    margin: 0 0 10px 0;\\n    font-weight: bold;\\n}\\n\\np#text, #result, #analysis {\\n    border: solid thin black;\\n    text-align: justify;\\n    height: 400px;\\n    max-height: 400px;\\n    word-wrap: break-word;\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    padding: 10px;\\n    line-height: 25px;\\n    font-size: 20px;\\n    margin-bottom: 30px;\\n}\\n\\n#result, #analysis {\\n    height: 300px;\\n    max-height: 300px;    \\n}\\n\\nli {\\n    margin-top: 10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/localstars/Documents/github/speech-recognition/src/app/speech/speech.component.css\n// module id = ../../../../../src/app/speech/speech.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <nav class=\\\"navbar navbar-default col-lg-12\\\">\\n            <div class=\\\"navbar-header col-lg-2\\\">\\n                <h2 (click)=\\\"home()\\\">Home Page</h2>\\n            </div>\\n            <div class=\\\"col-lg-1\\\">\\n                <button *ngIf=\\\"user\\\" id=\\\"btn-test\\\" [class]=\\\"isStopped ? 'btn btn-success col-lg-12' : 'btn btn-danger col-lg-12'\\\" (click)=\\\"timer(isStopped);\\\">\\n                    {{isStopped ? 'Start Test' : 'End Test'}}\\n                </button>\\n            </div>\\n            <div class=\\\"col-lg-2\\\">\\n                <span *ngIf=\\\"user\\\" class=\\\"navbar-brand user-name\\\">Time - {{time || '00 : 00'}}</span>\\n            </div>\\n            <div class=\\\"col-lg-6\\\">\\n                <span *ngIf=\\\"user\\\" class=\\\"navbar-brand user-name pull-right text-right\\\">Hello {{user?.displayName}}!</span>\\n            </div>\\n            <div class=\\\"col-lg-1\\\">\\n                <button *ngIf=\\\"user\\\" (click)=\\\"logout();\\\" class=\\\"btn btn-danger pull-right col-lg-12\\\">Logout</button>\\n            </div>\\n            <div [class]=\\\"user ? 'col-lg-1' : 'col-lg-10'\\\">\\n                <button *ngIf=\\\"!user\\\" (click)=\\\"login();\\\" class=\\\"btn btn-success pull-right\\\">Login</button>\\n            </div>\\n        </nav>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n            <h3>Sample</h3>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n            <h3>User Input</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n            <img id=\\\"image-sample\\\" src=\\\"./assets/sample.png\\\" alt=\\\"sample-text\\\">\\n        </div>\\n        <div id=\\\"text-generated\\\" class=\\\"col-lg-6\\\">\\n            <p id=\\\"text\\\">recognised speech...</p>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-8\\\">\\n            <h3>Difference</h3>\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <h3>Analysis</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-8\\\">\\n            <div id=\\\"result\\\"></div>\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <div id=\\\"analysis\\\">\\n                <br>\\n                <ul *ngIf=\\\"speech\\\" class=\\\"col-lg-offset-1 col-lg-9\\\">\\n                    <li>\\n                        <span> Actual Word Count - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.actualWordCount}} </span>\\n                    </li>\\n                    <li>\\n                        <span> Recognised Word Count - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.recognisedWordCount}} </span>\\n                    </li>\\n                    <li>\\n                        <span> Correct Word Count - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.correctWordCount}} </span>\\n                    </li>\\n                    <li>\\n                        <span> accuracy - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.accuracy}}% </span>\\n                    </li>\\n                    <li>\\n                        <span> Completion Time - </span>\\n                        <span class=\\\"pull-right\\\"> {{speech.completionTime}} seconds </span>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/localstars/Documents/github/speech-recognition/src/app/speech/speech.component.html\n// module id = ../../../../../src/app/speech/speech.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AngularFireAuth } from \"angularfire2/auth\";\nimport * as firebase from 'firebase'\nimport * as Diff from \"text-diff\";\n\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { SpeechRecognition } from \"../speech-recognition\";\nimport { Speech } from \"../models/speech.model\";\nimport { BaseComponent } from \"../base.component\";\n\n@Component({\n    selector: 'app-recognition',\n    templateUrl: './speech.component.html',\n    styleUrls: ['./speech.component.css']\n})\nexport class SpeechComponent extends BaseComponent implements OnInit {\n\n    private _SpeechRecognition: SpeechRecognition;\n    private dbList: any;\n    private user: any;\n    private diff: Diff;\n    private isStopped: boolean = true;\n    private startTime: Date;\n    private speech: Speech;\n\n    private time: string;\n    private resetTimer: any;\n\n    private translatedtext: string = \"\";\n\n    constructor(private _AngularFireAuth: AngularFireAuth,\n        private _db: AngularFireDatabase,\n            private _Router: Router) { \n        super();\n        this.diff = new Diff();\n    }\n\n    public ngOnInit(): void {\n        this._AngularFireAuth.authState.subscribe((user: firebase.User) => {\n            if (user && user.uid) {\n                this.user = {\n                    displayName: user.displayName,\n                    email: user.email,\n                    phoneNumber: user.phoneNumber,\n                    photoURL: user.photoURL,\n                    providerId: user.providerId,\n                    uid: user.uid\n                };\n                sessionStorage.setItem('user', JSON.stringify(this.user));\n                this.dbList = this._db.list(`/${this.user.uid}/speech`);\n            }\n        });\n    }\n\n    private initialise(): void {\n        if (this._SpeechRecognition) {\n            return;\n        }\n        this._SpeechRecognition = this._SpeechRecognition || new SpeechRecognition('en-GB', true, true, 1);\n        this._SpeechRecognition.onresult = this.onResult.bind(this);\n        this._SpeechRecognition.start();\n        this.speech = null;\n    }\n\n    private onResult(event: any): void {\n        if (this.isStopped) {\n            return;\n        }\n        var intermidiateResults = '';\n        for (var i = event.resultIndex; i < event.results.length; i++) {\n            var transcript = event.results[i][0].transcript;\n            transcript.replace(\"\\n\", \"<br>\");\n            if (event.results[i].isFinal) {\n                this.translatedtext += transcript;\n            } else {\n                intermidiateResults += transcript;\n            }\n        }\n        this.translatedtext = this.translatePanctuations(this.translatedtext);\n        intermidiateResults = this.translatePanctuations(intermidiateResults);\n        document.getElementById('text').innerHTML = this.translatedtext + '<span style=\"color:#777\">' + intermidiateResults + '</span>';\n    }\n\n    private translatePanctuations(message: string): string {\n        message = message.replace(/full stop/ig, '.');\n        message = message.replace(/comma/ig, ',');\n        message = message.replace(/exclamation/ig, '!');\n        message = message.replace(/question mark/ig, '?');\n\n        message = message.replace(' .', '. ');\n        message = message.replace(' ,', ', ');\n        message = message.replace(' !', '! ');\n        message = message.replace(' ?', '? ');\n\n        message = message.replace('.  ', '. ');\n        message = message.replace(',  ', ', ');\n        message = message.replace('!  ', '! ');\n        message = message.replace('?  ', '? ');\n\n        message = message.replace('universe', 'Universe');\n\n        message = this.titleCase(message);\n\n        return message.trim();\n    }\n\n    private titleCase(message: string) {\n        return message.split('. ').map(function (sentence: string) {\n            return sentence.charAt(0).toUpperCase() + sentence.slice(1);\n        }).join('. ');\n    }\n\n    private logout(): void {\n        this._AngularFireAuth.auth.signOut().then((response: any) => {\n            this.isStopped = true;\n            this.time = null;\n            this.speech = null;\n            document.getElementById('text').innerText = \"recognised speech...\";\n            document.getElementById('result').innerHTML = \"\";\n            if (this.resetTimer) {\n                clearTimeout(this.resetTimer);\n            }\n            this.user = null;\n            sessionStorage.removeItem('user');\n        });\n    }\n\n    private login(): void {\n        this._AngularFireAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    }\n\n    private timer(): void {\n        this.isStopped = !this.isStopped;\n        if (this.isStopped) {\n            this.processData();\n            this.updateData();\n            return;\n        }\n        this.initialise();\n        let time: number = 0;\n        this.startTime = new Date();\n        this.resetTimer = setInterval(() => {\n            ++time;\n            let minutes: number = Math.floor(time / 60);\n            let seconds: number = time % 60;\n            this.time = `${minutes < 10 ? `0${minutes}` : minutes} : ${seconds < 10 ? `0${seconds}` : seconds}`;\n        }, 1000);\n    }\n\n    private updateData(): void {\n        this.dbList.push(this.speech).then((response: any) => {\n            console.log(response);\n        }).catch((error: any) => console.log(error));\n    }\n\n    private processData() {\n        clearInterval(this.resetTimer);\n        let textDiff: string = this.diff.main(this.sampleText, document.getElementById('text').innerText);\n        document.getElementById('result').innerHTML = this.diff.prettyHtml(textDiff);\n\n        let sampleTextArray: Array<string> = this.sampleText.split(' ');\n        let recognisedTextArray: Array<string> = document.getElementById('text').innerText.split(' ');\n\n        this.speech = new Speech();\n        this.speech.userName = this.user.displayName;\n        this.speech.data = document.getElementById('text').innerText;\n        this.speech.diff = document.getElementById('result').innerHTML;\n        this.speech.actualWordCount = sampleTextArray.length;\n        this.speech.recognisedWordCount = recognisedTextArray.length;\n        this.speech.correctWordCount = 0;\n\n        for (let i = 0; i < recognisedTextArray.length; i++) {\n            if (sampleTextArray.indexOf(recognisedTextArray[i]) > -1) {\n                this.speech.correctWordCount += 1;\n                sampleTextArray.splice(sampleTextArray.indexOf(recognisedTextArray[i]), 1);\n            }\n        }\n\n        this.speech.accuracy = (this.speech.correctWordCount / this.speech.actualWordCount) * 100;\n        this.speech.accuracy = parseFloat(this.speech.accuracy.toFixed(2));\n        this.speech.completionTime = (new Date().valueOf() - this.startTime.valueOf()) / 1000;\n        this.speech.completionTime = parseFloat(this.speech.completionTime.toFixed(2));\n    }\n\n    private home(): void {\n        this._Router.navigate(['']);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/app/speech/speech.component.ts","export const environment = {\n    production: false,\n    firebase: {\n        apiKey: \"AIzaSyCyB4cu00prvg504Y_XXVlZaJ15GErwJG8\",\n        authDomain: \"mark-it-1.firebaseapp.com\",\n        databaseURL: \"https://mark-it-1.firebaseio.com\",\n        projectId: \"mark-it-1\",\n        storageBucket: \"mark-it-1.appspot.com\",\n        messagingSenderId: \"978631038383\"\n    }\n};\n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/localstars/Documents/github/speech-recognition/src/main.ts"],"sourceRoot":""}